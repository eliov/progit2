==== Git və  Mercurial

(((Interoperation with other VCSs, Mercurial)))
(((Mercurial)))
DVCS kainatı yalnız Git-dən daha böyükdür.
Əslində, bu məkanda çox sayda sistem var, hər biri paylanmış versiya nəzarətinin düzgün şəkildə necə ediləcəyinə dair öz bucağına malikdir.
Git xaricində ən populyar Mercurialdır və ikisi bir çox cəhətdən çox oxşardır.

Yaxşı bir xəbər, Git'in müştəri tərəfindəki davranışını üstün tutsanız, lakin mənbə kodu Mercurial ilə idarə olunan bir layihə ilə işləyirsinizsə, Git'i bir Mercurial-a yerləşdirilən bir depo üçün müştəri olaraq istifadə etməyin bir yolu olmasıdır.
Gitin server depoları ilə danışıq üsulu uzaqdan idarəedici olduğundan bu körpünün uzaq bir köməkçi kimi həyata keçirilməsinə təəccüblənməməliyik.
Layihənin adı git-remote-hg-dir və https://github.com/felipec/git-remote-hg[] saytında tapa bilərsiniz.

===== git-remote-hg

Əvvəlcə git-remote-hg yükləməlisiniz.
Bu, əsasən faylı path-nıza bir yerə atmağa səbəb olur:

[source,console]
----
$ curl -o ~/bin/git-remote-hg \
  https://raw.githubusercontent.com/felipec/git-remote-hg/master/git-remote-hg
$ chmod +x ~/bin/git-remote-hg
----

…`~/bin`-in `$PATH`-da olduğunuzu düşünürük.
Git-remote-hg-nin başqa bir asılılığı var: Python üçün `mercurial`  kitabxanası.
Python quraşdırılıbsa, bu qədər sadədir:

[source,console]
----
$ pip install mercurial
----

Python'unuz yoxdursa, https://www.python.org/[] səhifəsini ziyarət edin və əvvəl əldə edin.

Sizə lazım olan son şey Mercurial müştərisidir.
https://www.mercurial-scm.org/[] saytına gedin və hələ də yoxdursa quraşdırın.

İndi isə rock etməyə hazırsınız.
Sadəcə, push etməyə bir Mercurial deposuna ehtiyacınız var.
Xoşbəxtlikdən, hər bir Mercurial deposu bu şəkildə hərəkət edə bilər, buna görə Mercurial-ı öyrənmək üçün hər kəsin istifadə etdiyi "hello world" deposundan istifadə edəcəyik:

[source,console]
----
$ hg clone http://selenic.com/repo/hello /tmp/hello
----

===== Başlangıc

Artıq uyğun bir  ``server-tərəf'' depomuz olduğuna görə tipik bir iş axınından keçə bilərik.
Gördüyünüz kimi, bu iki sistem kifayət qədər sürtünmə olmadan oxşayır.

Həmişə olduğu kimi Git ilə əvvəlcə klonlaşdırırıq:

[source,console]
----
$ git clone hg::/tmp/hello /tmp/hello-git
$ cd /tmp/hello-git
$ git log --oneline --graph --decorate
* ac7955c (HEAD, origin/master, origin/branches/default, origin/HEAD, refs/hg/origin/branches/default, refs/hg/origin/bookmarks/master, master) Create a makefile
* 65bb417 Create a standard 'hello, world' program
----

Bir Mercurial deposu ilə işləmək üçün standart `git clone` əmrini istifadə etdiyini görəcəksiniz.
Git-in HTTP/S protokolunun necə tətbiq olunduğuna bənzər bir mexanizm istifadə edərək (remote köməkçilər) git-remote-hg-nin kifayət qədər aşağı səviyyədə işləməsidir.
Git və Mercurial, hər bir müştərinin anbar tarixinin tam bir nüsxəsinə sahib olması üçün hazırlandığından, bu əmr bütün layihə tarixi daxil olmaqla tam bir klon yaradır və bunu kifayət qədər tez edir.

Log əmri iki commit göstərir, ən sonuncusu isə bir çox refer tərəfindən göstərilmişdir.
Bunlardan bəzilərinin əslində orada olmadığı ortaya çıxdı.
Gəlin `.git` qovluğundakılara nəzər salaq:

[source,console]
----
$ tree .git/refs
.git/refs
├── heads
│   └── master
├── hg
│   └── origin
│       ├── bookmarks
│       │   └── master
│       └── branches
│           └── default
├── notes
│   └── hg
├── remotes
│   └── origin
│       └── HEAD
└── tags

9 directories, 5 files
----

Git-remote-hg şeyləri daha idiomatik olaraq Git-esque etməyə çalışır, ancaq başlıq altında iki fərqli sistem arasındakı konseptual xəritələşməni idarə edir.
`refs/hg` qovluğu faktiki uzaq reflərin saxlanıldığı yerdir.
Məsələn, `refs/hg/origin/branches/default`, `master`-in işarə etdiyi ``ac7955c'' ilə başlayan SHA-1-i ehtiva edən bir Git ref sənədidir.

Beləliklə, `refs/hg` qovluğu bir növ saxta `refs/remotes/origin` kimidir, lakin bookmark-lar və branch-lar arasında əlavə bir fərq var.

`notes/hg` faylı, git-remote-hg xəritələrinin Gitin Mercurial dəyişən ID-lərinə necə hash olduğunun üçün başlanğıc nöqtəsidir.
Gəlin bir az araşdıraq:

[source,console]
----
$ cat notes/hg
d4c10386...

$ git cat-file -p d4c10386...
tree 1781c96...
author remote-hg <> 1408066400 -0800
committer remote-hg <> 1408066400 -0800

Notes for master

$ git ls-tree 1781c96...
100644 blob ac9117f...	65bb417...
100644 blob 485e178...	ac7955c...

$ git cat-file -p ac9117f
0a04b987be5ae354b710cefeba0e2d9de7ad41a9
----

Beləliklə, `refs/notes/hg`, Git obyekt bazasında adları olan digər obyektlərin siyahısı olan bir ağaca işarə edir.
`git ls-tree` bir ağacın içindəki əşyalar üçün rejimi, növü, obyekt hash-ı və fayl adını çıxarır.

Ağac item-larından birinə endikdən sonra içərisində ``0a04b98'' konteksi ilə (bu, `default` branch-nın ucundakı Mercurial dəyişikliyinin identifikatorudur) ``ac9117f'' ( `master` tərəfindən göstərilən commit-in SHA-1 hashı) adlı bir blob olduğunu görürük.

Yaxşı xəbər odur ki, bunların hamısı üçün narahat olmaq lazım deyil.
Tipik iş axını, Git remote ilə işləməkdən çox fərqli olmayacaq.

Davam etməzdən əvvəl iştirak etməli olduğumuz bir şey daha var: ignores.
Mercurial və Git bunun üçün çox bənzər bir mexanizm istifadə edirlər, lakin çox güman ki, bir `.gitignore` sənədini Mercurial deposuna daxil etmək istəməyəcəksiniz.
Xoşbəxtlikdən, Git'in diskdəki bir depo üçün lokal olan faylları ignore etməyin bir yolu var və Mercurial formatı Git ilə uyğundur, buna görə onu köçürməlisiniz:

[source,console]
----
$ cp .hgignore .git/info/exclude
----

The `.git/info/exclude` file acts just like a `.gitignore`, but isn't included in commits.

===== Workflow

Fərz edək ki, `master` branch-ında bir az iş gördük və bir neçə commit götürdük və onu uzaq depoya push etməyə hazırsınız.
Depomuz hazırda belə görünür:

[source,console]
----
$ git log --oneline --graph --decorate
* ba04a2a (HEAD, master) Update makefile
* d25d16f Goodbye
* ac7955c (origin/master, origin/branches/default, origin/HEAD, refs/hg/origin/branches/default, refs/hg/origin/bookmarks/master) Create a makefile
* 65bb417 Create a standard 'hello, world' program
----

`master` branch-ımız `origin/master`-dan iki commit-dir, lakin bu iki vəzifə yalnız local maşınımızda mövcuddur.
Başqa birinin eyni zamanda mühüm bir iş görüb görmədiyini baxaq:

[source,console]
----
$ git fetch
From hg::/tmp/hello
   ac7955c..df85e87  master     -> origin/master
   ac7955c..df85e87  branches/default -> origin/branches/default
$ git log --oneline --graph --decorate --all
* 7b07969 (refs/notes/hg) Notes for default
* d4c1038 Notes for master
* df85e87 (origin/master, origin/branches/default, origin/HEAD, refs/hg/origin/branches/default, refs/hg/origin/bookmarks/master) Add some documentation
| * ba04a2a (HEAD, master) Update makefile
| * d25d16f Goodbye
|/
* ac7955c Create a makefile
* 65bb417 Create a standard 'hello, world' program
----

`--all` flag-ından istifadə etdiyimiz üçün git-remote-hg tərəfindən daxili istifadə edilən ``qeydlər'' istinadlarını görürük, lakin onları ignore edə bilərik.
Qalan nə gözlədiyimizdir; `origin/master` bir commit-lə irəli getdi və tariximiz indi fərqlidir.
Bu fəsildə işlədiyimiz digər sistemlərdən fərqli olaraq, Mercurial birləşmələri idarə edə bilir, buna görə də zərif bir şey etməyəcəyik.

[source,console]
----
$ git merge origin/master
Auto-merging hello.c
Merge made by the 'recursive' strategy.
 hello.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
$ git log --oneline --graph --decorate
*   0c64627 (HEAD, master) Merge remote-tracking branch 'origin/master'
|\
| * df85e87 (origin/master, origin/branches/default, origin/HEAD, refs/hg/origin/branches/default, refs/hg/origin/bookmarks/master) Add some documentation
* | ba04a2a Update makefile
* | d25d16f Goodbye
|/
* ac7955c Create a makefile
* 65bb417 Create a standard 'hello, world' program
----

Əla.
Testləri aparırıq və hər şey uğurlu keçir, buna görə işimizi komandanın qalan üzvləri ilə bölüşməyə hazırıq:

[source,console]
----
$ git push
To hg::/tmp/hello
   df85e87..0c64627  master -> master
----

Bu qədər!
Merkuri deposuna nəzər yetirsəniz, bunun gözlədiyimizi etdiyini görərsiniz:

[source,console]
----
$ hg log -G --style compact
o    5[tip]:4,2   dc8fa4f932b8   2014-08-14 19:33 -0700   ben
|\     Merge remote-tracking branch 'origin/master'
| |
| o  4   64f27bcefc35   2014-08-14 19:27 -0700   ben
| |    Update makefile
| |
| o  3:1   4256fc29598f   2014-08-14 19:27 -0700   ben
| |    Goodbye
| |
@ |  2   7db0b4848b3c   2014-08-14 19:30 -0700   ben
|/     Add some documentation
|
o  1   82e55d328c8c   2005-08-26 01:21 -0700   mpm
|    Create a makefile
|
o  0   0a04b987be5a   2005-08-26 01:20 -0700   mpm
     Create a standard 'hello, world' program
----

_2_ nömrəli dəyişikliklər Mercurial tərəfindən, _3_ və _4_ nömrəli dəyişikliklər git-remote-hg tərəfindən Git ilə edilən commit-ləri push etməklə edilmişdir.

===== Branch-lar və Bookmark-lar

Gitin yalnız bir növ branch-ı var: commit-lər qoyulduqda hərəkət edən bir istinad.
Mercurial-da bu növ bir istinad ``bookmark'' adlanır və Git branch-ı ilə eyni şəkildə davranır.

Mercurial-ın ``branch'' konsepsiyası daha ağırdır.
Dəyişikliklərin edildiyi branch _dəyişikliklərlə_ yazılır, yəni həmişə depo tarixində olacaqdır.

Budur `develop` branch-ında edilən bir commit-in nümunəsi:

[source,console]
----
$ hg log -l 1
changeset:   6:8f65e5e02793
branch:      develop
tag:         tip
user:        Ben Straub <ben@straub.cc>
date:        Thu Aug 14 20:06:38 2014 -0700
summary:     More documentation
----

``branch'' ilə başlayan sətrə diqqət yetirin.
Git bunu həqiqətən təkrarlaya bilməz (və buna ehtiyac yoxdur; hər iki branch növü də Git ref kimi təmsil edilə bilər), lakin git-remote-hg fərqi anlamalıdır, çünki Mercurial qayğı göstərir.

Mercurial bookmark-lar yaratmaq, Git branch-ları yaratmaq qədər asandır.
Git tərəfində:

[source,console]
----
$ git checkout -b featureA
Switched to a new branch 'featureA'
$ git push origin featureA
To hg::/tmp/hello
 * [new branch]      featureA -> featureA
----

Bunun üçün hər şey var.
Mercurial tərəfdən bu belə görünür:

[source,console]
----
$ hg bookmarks
   featureA                  5:bd5ac26f11f9
$ hg log --style compact -G
@  6[tip]   8f65e5e02793   2014-08-14 20:06 -0700   ben
|    More documentation
|
o    5[featureA]:4,2   bd5ac26f11f9   2014-08-14 20:02 -0700   ben
|\     Merge remote-tracking branch 'origin/master'
| |
| o  4   0434aaa6b91f   2014-08-14 20:01 -0700   ben
| |    update makefile
| |
| o  3:1   318914536c86   2014-08-14 20:00 -0700   ben
| |    goodbye
| |
o |  2   f098c7f45c4f   2014-08-14 20:01 -0700   ben
|/     Add some documentation
|
o  1   82e55d328c8c   2005-08-26 01:21 -0700   mpm
|    Create a makefile
|
o  0   0a04b987be5a   2005-08-26 01:20 -0700   mpm
     Create a standard 'hello, world' program
----

Reviziya 5-də yeni `[featureA]` etiketinə diqqət yetirin.
Bunlar bir istisna olmaqla, Git tərəfindəki Git branch-ları kimi hərəkət edirlər: bir bookmark-ı Git tərəfdən silə bilməzsiniz (bu, uzaq köməkçilərin məhdudiyyətidir).

``heavyweight'' bir Mercurial branch-da da işləyə bilərsiniz: sadəcə `branches` namespace-nə  bir branch qoyun:

[source,console]
----
$ git checkout -b branches/permanent
Switched to a new branch 'branches/permanent'
$ vi Makefile
$ git commit -am 'A permanent change'
$ git push origin branches/permanent
To hg::/tmp/hello
 * [new branch]      branches/permanent -> branches/permanent
----

Mercurial tərəfdə görünən budur:

[source,console]
----
$ hg branches
permanent                      7:a4529d07aad4
develop                        6:8f65e5e02793
default                        5:bd5ac26f11f9 (inactive)
$ hg log -G
o  changeset:   7:a4529d07aad4
|  branch:      permanent
|  tag:         tip
|  parent:      5:bd5ac26f11f9
|  user:        Ben Straub <ben@straub.cc>
|  date:        Thu Aug 14 20:21:09 2014 -0700
|  summary:     A permanent change
|
| @  changeset:   6:8f65e5e02793
|/   branch:      develop
|    user:        Ben Straub <ben@straub.cc>
|    date:        Thu Aug 14 20:06:38 2014 -0700
|    summary:     More documentation
|
o    changeset:   5:bd5ac26f11f9
|\   bookmark:    featureA
| |  parent:      4:0434aaa6b91f
| |  parent:      2:f098c7f45c4f
| |  user:        Ben Straub <ben@straub.cc>
| |  date:        Thu Aug 14 20:02:21 2014 -0700
| |  summary:     Merge remote-tracking branch 'origin/master'
[...]
----

``permanent'' branch adı _7_ işarəsi ilə dəyişiklik dəsti ilə qeyd edildi.

Git tərəfdən, bu branch üslublarından hər hansı biri ilə işləmək eynidir: normalda istədiyiniz kimi checkout, commit, fetch, merge, pull, və push etmək.
Bilməli olduğunuz bir şey, Mercurial-ın tarixin yenidən yazılmasını dəstəkləməməsi, yalnız tarixə əlavə etməsidir.
Mercurial depomuzun interaktiv rebase və force-push tətbiqindən sonra belə görünəcək:

[source,console]
----
$ hg log --style compact -G
o  10[tip]   99611176cbc9   2014-08-14 20:21 -0700   ben
|    A permanent change
|
o  9   f23e12f939c3   2014-08-14 20:01 -0700   ben
|    Add some documentation
|
o  8:1   c16971d33922   2014-08-14 20:00 -0700   ben
|    goodbye
|
| o  7:5   a4529d07aad4   2014-08-14 20:21 -0700   ben
| |    A permanent change
| |
| | @  6   8f65e5e02793   2014-08-14 20:06 -0700   ben
| |/     More documentation
| |
| o    5[featureA]:4,2   bd5ac26f11f9   2014-08-14 20:02 -0700   ben
| |\     Merge remote-tracking branch 'origin/master'
| | |
| | o  4   0434aaa6b91f   2014-08-14 20:01 -0700   ben
| | |    update makefile
| | |
+---o  3:1   318914536c86   2014-08-14 20:00 -0700   ben
| |      goodbye
| |
| o  2   f098c7f45c4f   2014-08-14 20:01 -0700   ben
|/     Add some documentation
|
o  1   82e55d328c8c   2005-08-26 01:21 -0700   mpm
|    Create a makefile
|
o  0   0a04b987be5a   2005-08-26 01:20 -0700   mpm
     Create a standard "hello, world" program
----

_8_, _9_ və _10_ dəyişikliklər yaradıldı və `permanent` branch-na aiddir, lakin köhnə dəyişikliklər hələ də mövcuddur.
Bu, Mercurial istifadə edən komanda yoldaşlarınız üçün *çox* qarışıq ola bilər, buna görə də bundan çəkinməyə çalışın.

===== Mercurial-ın Qısa Məzmunu

Git və Mercurial kifayət qədər oxşardır və sərhəd boyunca işləmək kifayət qədər ağrısızdır.
Maşınınızda qalan tarixi dəyişdirməkdən çəkinsəniz (ümumiyyətlə tövsiyə olunduğu kimi), digər ucunun Mercurial olduğunu da bilməyəcəksiniz.
