=== Bash'da Git

(((bash)))(((tab completion, bash)))(((shell prompts, bash)))
Bash istifadəçisisinizsə, Git ilə təcrübənizi daha dost etmək üçün shell-nizin bəzi xüsusiyyətlərinə toxuna bilərsiniz.
Git, həqiqətən, bir neçə shell üçün pluginlərlə təchiz olunur, lakin varsayılan olaraq açıq deyil.

Əvvəlcə Git qaynaq kodundan `contrib/completion/git-completion.bash` faylının bir kopyasını çıxarmalısınız.
Ana qovluğunuz kimi lazımlı bir yerə kopyalayın və bunu `.bashrc`- yə əlavə edin:

[source,console]
----
. ~/git-completion.bash
----

Tamamlandıqdan sonra qovluğunuzu Git deposuna dəyişin və yazın:

[source,console]
----
$ git chec<tab>
----

…və Bash avtomatik olaraq `git checkout` gedəcəkdir.
Bu, Git'in bütün alt əmrləri, komanda xətti parametrləri və uyğun olduğu yerlərdə məsafələr və ref adları ilə işləyir.

Mövcud qovluğun Git deposu haqqında məlumat göstərmək üçün təklifinizi fərdiləşdirmək də faydalıdır.
Bu, istədiyiniz qədər sadə və ya mürəkkəb ola bilər, lakin ümumiyyətlə cari branch və iş qovluğunun vəziyyəti kimi insanların çoxunun istədiyi bir neçə əsas məlumat var.
Bunları təklifinizə əlavə etmək üçün Gitin qaynaq deposundan contrib/completion/git-prompt.sh` faylını ev qovluğuna kopyalayın, `.bashrc`-inizə belə bir şey əlavə edin: 

[source,console]
----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
----

`\w` cari iş qovluğunu yazdırmaq deməkdir, `\$` təklifin  `$`hissəsini yazdırır və  `__git_ps1 " (%s)"` ilə `git-prompt.sh` tərəfindən verilən funksiyanı formatlaşdırma arqumenti ilə çağırır.
İndi Git tərəfindən idarə olunan bir layihənin içərisində olduğunuz zaman bash təklifiniz belə görünəcək:

.Customized `bash` prompt
image::images/git-bash.png[Customized `bash` prompt]

Bu skriptlərin hər ikisi faydalı sənədlərlə gəlir; daha çox məlumat üçün `git-complete.bash` və `git-prompt.sh` məzmununa nəzər yetirin.
